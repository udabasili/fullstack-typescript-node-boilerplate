{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Language and Environment */
    "target": "ES2020",
    /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": [
      "ES2020",
      "esnext.asynciterable"
    ],
    /* Specify a set of bundled library declaration files that describe the target runtime environment. */

    /* Modules */
    "module": "commonjs",
    /* Specify what module code is generated. */
    "baseUrl": ".",
    "types": ["reflect-metadata", "jest", "mocha", "jasmine"],
    /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@/*": ["./src/*"]
    },
    /* Specify a set of entries that re-map imports to additional lookup locations. */

    /* Specify multiple folders that act like `./node_modules/@types`. */
    "resolveJsonModule": true,
    /* Enable importing .json files */

    /* Emit */
    "declaration": true,
    /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "sourceMap": true,
    /* Create source map files for emitted JavaScript files. */
    "outDir": "./build",
    /* Specify an output folder for all emitted files. */


    /* Interop Constraints */
    // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */
    "allowSyntheticDefaultImports": true,
    /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,
    /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
    // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true,
    /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,
    /* Enable all strict type-checking options. */
    "noImplicitAny": true,
    /* Enable error reporting for expressions and declarations with an implied `any` type.. */
    "strictNullChecks": true,
    /* When type checking, take into account `null` and `undefined`. */

    "noImplicitThis": true,
    /* Enable error reporting when `this` is given the type `any`. */
    // "useUnknownInCatchVariables": true,               /* Type catch clause variables as 'unknown' instead of 'any'. */
    "noFallthroughCasesInSwitch": true,
    /* Enable error reporting for fallthrough cases in switch statements. */

    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": [
    "./src/**/*",
    "./__test__/**/*"
  ],
  "exclude": [
    "node_modules",
  ]
}